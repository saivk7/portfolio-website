{"version":3,"sources":["components/terminal/File.ts","components/terminal/info/exp.ts","components/terminal/info/projects.ts","components/terminal/info/animals.ts","components/terminal/info/certifications.ts","components/terminal/info/index.ts","components/terminal/utils/fileInsert.ts","components/terminal/terminalUtils.ts","components/terminal/TerminalBar.tsx","components/terminal/Commands.ts","components/terminal/Terminal.tsx","components/terminal/index.tsx","components/footer/Footer.tsx","components/header/Header.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["File","name","type","location","data","files","this","newName","experience","file1","file2","file3","push","projects","emptyDirectory","animals","file4","undefined","certifications","homeArray","map","file","getName","getRequiredArray","arr","innerLevel","console","log","i","length","getType","getLocation","getFiles","getArr","getDirectoryName","workingDir","dirName","replaced","replace","useStyles","makeStyles","theme","header","background","height","display","justifyContent","alignItems","termButton","width","borderRadius","marginLeft","exit","minimize","maximize","TerminalBar","classes","className","tabCommands","isValidTabCommand","cmd","c","commands","terminalContainer","backgroundColor","gridAutoFlow","margin","color","outline","textShadow","fontSize","fontFamily","fontWeight","minHeight","maxHeight","boxShadow","alignContent","scrollbarColor","commandInput","border","maxWidth","directoryStyle","fileStyle","Terminal","useState","workingArr","setWorkingArr","setWorkingDir","cmdInput","setCmdInput","results","setResults","count","setCount","React","useEffect","getCommandArgs","command","split","filter","e","handleKeyDown","key","preventDefault","input","toPush","style","textAlign","parseCommand","inputs","terminalOutput","mockEnter","nearestMathcArray","workingFile","regex","RegExp","match","sort","getNearestMatch","FileArray","padding","returnElement","columnCount","flexWrap","changeDirectory","dir","isValidDirectory","prev","newDir","lul","newArr","fileFound","forEach","fileInArr","getData","showFileContent","result","id","onChange","target","value","onKeyDown","TerminalComp","Copyright","Typography","variant","Link","href","Date","getFullYear","root","flexDirection","main","marginTop","spacing","marginBottom","footer","palette","grey","Footer","CssBaseline","Container","toolbar","borderBottom","divider","toolbarTitle","flex","toolbarSecondary","overflowX","toolbarLink","flexShrink","Header","props","sections","title","Toolbar","Button","size","component","align","noWrap","IconButton","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d3710bd.chunk.js","sourcesContent":["export class File{\r\n    private name :string;\r\n    private type : string;\r\n    private location:string;\r\n    private data ?: string;\r\n    private files ?: File[]| null ;\r\n\r\n    constructor(name:string,type:string,location:string, data ?:string, files?:File[] | null ){\r\n        this.name = name;\r\n        this.type = type;\r\n        this.location = location;\r\n        this.data = data;\r\n        if(type==='directory'){\r\n            this.files = files;\r\n        }\r\n    }\r\n\r\n    getName(): string{\r\n        return this.name;\r\n    }\r\n    setName(newName:string) {\r\n        this.name = newName;\r\n    }\r\n\r\n    getType(): string{\r\n        return this.type;\r\n    }\r\n    \r\n    getLocation():string{\r\n        return this.location;\r\n    }\r\n\r\n    getData(): string {\r\n\r\n        return this.data || '';\r\n    }\r\n\r\n    getFiles(): File[] | null {\r\n        if(this.type==='directory'){\r\n            return this.files || null;\r\n        }        \r\n        return null;\r\n    }\r\n\r\n    /* makeNewFolder(name:string): File {\r\n\r\n    }\r\n\r\n    makeNewFile(name:string,data:string) : File{\r\n\r\n    } */\r\n\r\n}\r\n","\r\nimport { File } from '../File';\r\n\r\n\r\nlet experience :File[] = [];\r\n\r\nlet file1: File = new File(\"vedanta\",\"file\",\"/experience\",\"Software Enigeer\"); \r\nlet file2: File = new File(\"logicHive\",\"file\",\"/experience\",\"Intern\"); \r\nlet file3: File = new File(\"NITK\",\"file\",\"/experience\",\"Student\"); \r\n\r\nexperience.push(file1);\r\nexperience.push(file2);\r\nexperience.push(file3);\r\n\r\nexport default experience;\r\n","\r\nimport { File } from '../File';\r\n\r\n\r\nlet projects :File[] = [];\r\n\r\nlet file1: File = new File(\"whatsapp\",\"file\",\"/projects\",\"Full stack whatapp clone with real time texting\"); \r\nlet file2: File = new File(\"newdevjobs\",\"file\",\"/projects\",\"New dev jobs\"); \r\nlet file3: File = new File(\"FibonaaciHeap\",\"file\",\"/projects\",\"Implementation of Fib heap\"); \r\n\r\nprojects.push(file1);\r\nprojects.push(file2);\r\nprojects.push(file3);\r\n\r\nexport default projects;\r\n","\r\nimport { File } from '../File';\r\n\r\nlet emptyDirectory: File[] = [new File(\"lol\",\"file\",\"/animals/testDir\",\"empty file\"), new File(\"lol2\",\"file\",\"/animals/testDir\",\"empty file2\")];\r\nlet animals :File[] = [];\r\n\r\nlet file1: File = new File(\"zefee\",\"file\",\"/animals\",\"Husky dog in Gnv\"); \r\nlet file2: File = new File(\"BabyChai\",\"file\",\"/animals\",\"Maine coon cat in UK\"); \r\nlet file3: File = new File(\"NITK\",\"file\",\"/animals\",\"Student\"); \r\nlet file4: File = new File(\"testDir\", \"directory\",\"/animals\",undefined,emptyDirectory)\r\n\r\nanimals.push(file1);\r\nanimals.push(file2);\r\nanimals.push(file3);\r\nanimals.push(file4);\r\n\r\nexport default animals;\r\n","import { File } from '../File';\r\n\r\n\r\nlet certifications :File[] = [];\r\n\r\nlet file1: File = new File(\"AWS\",\"file\",\"/certifications\",\"AWS Certified Cloud Architect : Associate Level\"); \r\nlet file2: File = new File(\"SixSigma\",\"file\",\"/certifications\",\"KPMG Certified Six Sigma : Green Belt\"); \r\n//let file3: File = new File(\"FibonaaciHeap\",\"file\",\"/certifications\",\"Implementation of Fib heap\"); \r\n\r\ncertifications.push(file1);\r\ncertifications.push(file2);\r\n//certifications.push(file3);\r\n\r\nexport default certifications;\r\n","import { File } from '../File';\r\nimport experience from './exp';\r\nimport projects from './projects';\r\nimport animals from './animals';\r\nimport certifications from './certifications';\r\n\r\n\r\nlet homeArray :File[] = [];\r\n\r\nlet file1: File = new File(\"experience\",\"directory\",\"/\",undefined,experience); \r\nlet file2: File = new File(\"projects\",\"directory\",\"/\",undefined,projects); \r\nlet file4: File = new File(\"animals\",\"directory\",\"/\",undefined,animals); \r\nlet file3: File = new File(\"certifications\",\"directory\",\"/\",undefined,certifications); \r\n\r\nhomeArray[0] = file1;\r\nhomeArray[1] = file2;\r\nhomeArray[2] = file3;\r\nhomeArray[3] = file4;\r\n\r\n\r\nexport const fileArr = homeArray.map( file => {\r\n    return file.getName();\r\n})\r\n\r\nexport default homeArray;","import { File } from '../File';\r\nimport { RecursiveFindDirectory } from './fileUtils';\r\n\r\n// Returns the array that needs modification \r\n// called by insert of delete file functions\r\nexport function getRequiredArray (location:string,arr:File[],innerLevel:number):any {\r\n    if(location === '/'){\r\n        return arr;\r\n    }\r\n    \r\n    if(arr===null){\r\n        console.log(\"\\n\\n ******* RETURNING  NULL  ******* \\n\\n\")\r\n        return null;\r\n    }\r\n\r\n    for(var i=0;i<arr.length;i++){ \r\n\r\n        if(arr[i].getType()==='directory'){\r\n\r\n            \r\n            console.log(\"current:\",(arr[i].getLocation()+ `${ (innerLevel)>=1 ? '/' : \"\" }` + `${arr[i].getName()}`) , \" || required: \" ,location)\r\n            console.log(\"match?:\", (arr[i].getLocation() + `${ (innerLevel)>=1 ? '/' : \"\" }`+ arr[i].getName()) === (location));\r\n            \r\n            /*\r\n            const x = arr[i].getLocation() + `${ (innerLevel)>=1 ? '/' : \"\" }` +arr[i].getName();\r\n\r\n            const y = location;\r\n            console.log(\"x:\",x,\"||  y :\",y, \" compare \" , (x===y));\r\n            */\r\n\r\n            if( (arr[i].getLocation() + `${ (innerLevel)>=1 ? '/' : \"\" }` + `${arr[i].getName()}`) === location){\r\n\r\n                console.log(\"FOUND ARRAY\",arr[i]);\r\n                console.log(\"FOUND ARRAY GET FILES\", arr[i].getFiles() );\r\n                const retFile: File[] = arr[i].getFiles()!;\r\n                return retFile;\r\n\r\n            }\r\n            else{\r\n\r\n                const getArr: File[] =  getRequiredArray(location,arr[i].getFiles()!,innerLevel+1);\r\n                console.log(\"INTERMEDIATE ARRAY :\", getArr);\r\n                if(getArr){\r\n                    return getArr;\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport function deleteFile(fileName:string,location:string,fileArr:File[]): File[] {\r\n    \r\n    var toDelete : File[] = getRequiredArray(location,fileArr,0);\r\n    console.log(\" ***** toDeleted Array: \\n\\n\", toDelete);\r\n    try{\r\n\r\n        for(var i =0 ; i< toDelete.length ; i++){\r\n            if(toDelete[i].getName()===fileName){\r\n                toDelete.splice(i,1);\r\n            }\r\n        }\r\n\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n    console.log(\" ***** deleted Array: \\n\\n\", toDelete);\r\n    return toDelete;\r\n\r\n}\r\n\r\nexport function addFile( file:File,fileArr:File[] ) : File[] {\r\n    /* console.log(\"main array before\", fileArr);*/\r\n    console.log('getLocation', file.getLocation());\r\n    \r\n    var toInsert : File[] = getRequiredArray(file.getLocation(),fileArr,0);\r\n\r\n    try{\r\n\r\n        console.log(\"\\n \\n ***!!! RETURNED ARRAY  : \" ,toInsert);\r\n        toInsert.push(file);\r\n\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n    \r\n    //console.log(\"AFTER PUSH \\n\", toInsert);\r\n    console.log(\"Main array\" , fileArr);\r\n    return fileArr;\r\n}\r\n\r\n\r\nexport function printDir(arr: File[],type:'file'|'directory') {\r\n    const retarr = [];\r\n    for(var i=0; i<arr.length; i++){\r\n        if( arr[i].getType() === type){\r\n            retarr.push(arr[i].getName())\r\n        }\r\n    }\r\n    return retarr;\r\n    \r\n}\r\n\r\n\r\n//console.log(\"ADD FILE\",addFile(animalFile,homeArray));\r\n/* \r\n\r\nif( fileArr[i].getType()==='directory' ){\r\n\r\n            console.log(\"CHECKING THE LOC MATCH:\",fileArr[i].getLocation() +`${fileArr[i].getName()}`, 'and ', file.getLocation() , fileArr[i].getLocation() +`${fileArr[i].getName()}` === file.getLocation());\r\n\r\n            if( fileArr[i].getLocation() +`${fileArr[i].getName()}` === file.getLocation()){\r\n\r\n                if(fileArr[i].getFiles()){\r\n                    console.log(\"PUSHING TO DIR \", fileArr[i].getName());\r\n                    console.log(\" \\n I'M HERE : \" , fileArr[i].getFiles()); \r\n                    fileArr[i].getFiles()!.push(file);\r\n                    console.log(\" \\n \\n  AFTER PUSH\",fileArr[i].getFiles());\r\n                    console.log(\"\\n\\n the  new  return home\",homeArray)\r\n                    return homeArray;\r\n                }\r\n            }else{\r\n                console.log(\" SEARCHING THE DIR \", fileArr[i].getName());\r\n                var newFileArr: File[] = fileArr[i].getFiles()!;\r\n                addFile(file,newFileArr);\r\n            }\r\n\r\n        }\r\n        console.log(\"for loop i= \", i)\r\n    }\r\n    console.log(\"DONE\")\r\n    \r\n    */","import {File} from \"./File\"\r\nimport homeArray from \"./info\";\r\nimport { getRequiredArray  } from \"./utils/fileInsert\";\r\n\r\n\r\nexport function isValidDirectory(workingDir:string,dirName:string):boolean{\r\n    const dir:string = getDirectoryName(workingDir,dirName);\r\n    const arr: File[] = getRequiredArray(dir,homeArray,0);\r\n    console.log(\"checking\", dir, \"from termial utils , isValidDir function: \" ,arr)\r\n    if(arr){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n//returns a proper dict name \r\nexport function getDirectoryName(workingDir:string, dirName:string):string{\r\n    \r\n    let re = /[^a-zA-Z0-9]*/ //replaces until first char [ex. ./home becomes home]\r\n    \r\n    const replaced = dirName.replace(re,\"\");\r\n\r\n    console.log(\"replaced is \" ,replaced , \"working dir \" , workingDir);\r\n    \r\n    if(workingDir==='/'){\r\n        console.log(\"Working dir is /\" , replaced);\r\n        return workingDir + replaced;\r\n        \r\n    }else{\r\n        return workingDir+ '/' + replaced;\r\n    }\r\n    \r\n}\r\n\r\nexport function getChangedDirectoryName(dir:string):string{\r\n\r\n    return \"\"\r\n}\r\n\r\n\r\nexport function getNearestMatch(file:string, workingArr:File[]):File[] | null{\r\n\r\n    const retArr: File[]  = workingArr.filter(workingFile=>{\r\n        var str = \"^\" + file\r\n        var regex = new RegExp(str,\"i\");\r\n\r\n        console.log(\"checking mactch, \", regex, workingFile.getName() ,workingFile.getName().match(regex));\r\n        if(workingFile.getName().match(regex)) return true;\r\n    })\r\n    return retArr.sort();\r\n    \r\n}\r\n\r\n\r\nconsole.log('test')\r\n\r\nconst str = \"./home\";\r\n\r\nconsole.log(getDirectoryName(\"\", str));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { isClassExpression } from 'typescript';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    header: {\r\n        background: \"#e4e3e5\",\r\n        height: \"28px\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\"\r\n      },\r\n      termButton: {\r\n        background: \" #f96256\",\r\n        width: \"14px\",\r\n        height: \"14px\",\r\n        borderRadius: \"15px\",\r\n        marginLeft: \"8px\"\r\n      },\r\n      exit: {\r\n        background: \"#f96256\"\r\n      },\r\n      minimize: {\r\n        background: \"#fdbc3d\"\r\n      },\r\n      maximize: {\r\n        background: \"#33c948\"\r\n      },\r\n    \r\n\r\n    \r\n    \r\n}));\r\n\r\nconst TerminalBar = () => {\r\n\r\n    \r\n\r\n    \r\n\r\n    const classes = useStyles({});\r\n\r\n    return (\r\n    <div className={classes.header}>\r\n        <div className={classes.termButton + \" \" + classes.exit}></div>\r\n        <div className={classes.termButton + \" \" + classes.minimize}></div>\r\n        <div className={classes.termButton + \" \" + classes.maximize}></div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TerminalBar;","const commands : string[] = [\"cd\",\"ls\",\"mkdir\",\"touch\",\"clear\",\"nano\",\"pwd\",\"cat\"];\r\nconst tabCommands: string[] = [\"cd\",\"ls\",\"cat\",\"lol\"]\r\n\r\nexport function isValidTabCommand(cmd:string) : boolean {\r\n    \r\n    console.log(\"commadn valid? \", cmd);\r\n    for(var c=0; c<tabCommands.length; c+=1){\r\n        if(tabCommands[c]===cmd) return true;\r\n        \r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport function isValidCommand(cmd:string) : boolean {\r\n\r\n    for(var c=0; c<commands.length; c+=1){\r\n        if(commands[c]===cmd) return true;\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport default commands;","import { makeStyles } from '@material-ui/core';\r\nimport { File } from './File';\r\nimport React, { useState } from 'react';\r\nimport homeArray, { fileArr } from './info';\r\n\r\nimport { getRequiredArray, addFile, deleteFile } from './utils/fileInsert';\r\nimport { checkServerIdentity } from 'tls';\r\nimport { isValidDirectory, getChangedDirectoryName, getDirectoryName, getNearestMatch } from './terminalUtils';\r\n\r\n\r\nimport TerminalBar from './TerminalBar';\r\nimport commands, { isValidTabCommand } from './Commands';\r\nimport { emitKeypressEvents } from 'readline';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    terminalContainer: {\r\n        backgroundColor: \"#1e1e1e\",\r\n        display: \"grid\",\r\n        gridAutoFlow: \"columns \",\r\n        margin: \"auto\",\r\n        width: \"75%\",\r\n        \r\n        color: \"white\",\r\n        outline: \"none\",\r\n        textShadow: \"0 0 0 gray\",\r\n        fontSize: \"1rem\",\r\n        //fontFamily: \"monospace\",\r\n        fontFamily:\"consolas\",\r\n        fontWeight: 200,\r\n        minHeight:\"400px\",\r\n        maxHeight:\"400px\",\r\n        \r\n        boxShadow:\"10px 5px 10px lightgray\",\r\n        alignItems:\"flex-start\",\r\n        alignContent:\"flex-start\",\r\n\r\n        scrollbarColor:\"transparent\"\r\n\r\n    },\r\n    commandInput: {\r\n        background: \"#1e1e1e\",\r\n        outline: \"none\",\r\n        border: \"none\",\r\n        color: \"white\",\r\n        maxWidth:\"100%\",\r\n        textShadow: \"0 0 0 gray\",\r\n        fontSize:\"1rem\",\r\n        //fontFamily: \"monospace\",\r\n        fontFamily:\"consolas\",\r\n        fontWeight: 200,\r\n        \r\n        \"&:focus\": {\r\n            outline: \"0px solid transparent;\",\r\n            border: \"none\"\r\n        }\r\n    },\r\n    directoryStyle:{\r\n        color:\"#2d84ea\",\r\n        margin: \"0px\"\r\n    },\r\n    fileStyle:{\r\n        margin: \"0px\",\r\n        color: \"greenyellow\"\r\n    }\r\n\r\n    \r\n    \r\n}));\r\n\r\nconst Terminal: React.FC = () => {\r\n    \r\n    const classes = useStyles({});\r\n    const [workingArr,setWorkingArr] = useState(homeArray);\r\n    const [workingDir, setWorkingDir] = useState('/')\r\n    const [cmdInput, setCmdInput] = useState('help');\r\n    const [results, setResults] = useState<JSX.Element[]>([]);\r\n    const [count,setCount] = useState<number>(0);\r\n    React.useEffect(()=>{\r\n        console.log(\"use effect hook\")\r\n\r\n    },[cmdInput,results,workingArr,count]);\r\n\r\n\r\n    const handleInputChange = (e: any) => { // for recording user input in the terminal\r\n        //console.log(fileArr);\r\n        //console.log(e.target.value);\r\n        setCmdInput(e.target.value);\r\n        e.target.style.width = e.target.value.length + 10 + \"ch\";\r\n    };\r\n\r\n    function getCommandArgs(command: string): string[] {\r\n        let arr = command.split(\" \").filter((e) => (e !== ''));\r\n        return arr;\r\n    }\r\n    const mockEnter = () => {\r\n        \r\n        const toPush: JSX.Element =  <div style={{  textAlign: \"left\" }}>\r\n            <span> guest@web:<span style={{ color: \"#2d84ea\" }}>~{workingDir}</span> $ {/*&gt*/} {\" \"} {cmdInput}</span>\r\n        </div>\r\n\r\n        results.push(toPush);\r\n        setResults(results);\r\n        terminalOutput(workingArr);\r\n        setCmdInput(cmdInput=>cmdInput);\r\n        setCount(count=> count+1);\r\n        \r\n    }\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            \r\n            //parseCommand(cmdInput); complete this function \r\n            //parse only if it is not empty command\r\n            console.log(\"Enter Key pressed\")\r\n            var input = cmdInput;\r\n            var inputs = getCommandArgs(input);\r\n            const toPush: JSX.Element =  <div style={{  textAlign: \"left\" }}>\r\n                <span> guest@web:<span style={{ color: \"#2d84ea\" }}>~{workingDir}</span> $ {/*&gt*/} {\" \"} {cmdInput}</span>\r\n            </div>\r\n\r\n            results.push(toPush)\r\n\r\n            if(cmdInput==\"\" || cmdInput==null) {\r\n                setResults(results);\r\n                return;\r\n            };\r\n            parseCommand(input);\r\n            \r\n            setCmdInput(\"\");\r\n        }\r\n        else if(e.key===\"Tab\"){\r\n            e.preventDefault();\r\n            console.log(\"tab pressed\")\r\n            console.log(\"command input is \", cmdInput)\r\n            let inputs: string[] = getCommandArgs(cmdInput);\r\n            //console.log(isValidTabCommand(inputs[0]) , \" input length\")\r\n            if(inputs.length==1 && isValidTabCommand(inputs[0])){\r\n\r\n                console.log(\"valid and now adding to result\");\r\n                \r\n                mockEnter();\r\n                \r\n                \r\n                setResults(results);\r\n                return;\r\n            }else if(inputs.length>=2 && isValidTabCommand(inputs[0])){\r\n                \r\n                const nearestMathcArray:File[] = getNearestMatch(inputs[1],workingArr)!;\r\n                console.log(\"nearest match\",nearestMathcArray);\r\n                if(nearestMathcArray.length>=2){\r\n                    \r\n                    const toPush: JSX.Element =  <div style={{  textAlign: \"left\" }}>\r\n                                                 <span> guest@web:<span style={{ color: \"#2d84ea\" }}>~{workingDir}</span> $ {/*&gt*/} {\" \"} {cmdInput}</span>\r\n                                                </div>\r\n    \r\n                    results.push(toPush)\r\n                    terminalOutput(nearestMathcArray);\r\n                    setCmdInput(cmdInput=> {\r\n                        setCount(count=> count+1);\r\n                        return inputs[0] + \" \" + inputs[1];\r\n                    });\r\n                    return;\r\n                    \r\n                    \r\n\r\n                }else if(nearestMathcArray.length===1){\r\n                    setCmdInput(inputs[0] + \" \" + nearestMathcArray[0].getName());\r\n                }\r\n\r\n                return nearestMathcArray;\r\n            }\r\n\r\n\r\n\r\n\r\n            \r\n\r\n\r\n        }\r\n    }\r\n    //outputs and add the the files to be displayed on terminal output to Reuslts array \r\n    function terminalOutput(FileArray: File[]): JSX.Element {\r\n\r\n        const arr = FileArray.map((file: File) => {\r\n            return (\r\n                <p style={{ margin: \"5px 10px\", padding: \"0px\" }}>\r\n                    <span className={ file.getType()==='directory'?classes.directoryStyle:classes.fileStyle}>{file.getName()} </span>\r\n                </p>\r\n            )\r\n        })\r\n        const arr1 = [arr];\r\n\r\n        /* console.log(\"The arrays is \" );\r\n        console.log(arr1); */\r\n        const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", alignItems:\"flex-start\", alignContent:\"flex-start\", margin:\"0px\",padding:\"0px\", columnCount: 3, flexWrap: \"wrap\" }}>\r\n            {arr}\r\n        </div>\r\n\r\n        results?.push(returnElement)\r\n        //console.log(\"results: \", results);\r\n        return returnElement;\r\n\r\n    }\r\n\r\n    function changeDirectory(dir:string){\r\n        console.log(\"Change dir name:\" , dir);\r\n        if(dir){\r\n\r\n            if(isValidDirectory(workingDir,dir)){\r\n                setWorkingDir(prev=> {\r\n                    const newDir = getDirectoryName(prev,dir);\r\n                    console.log(\"changing working dir  to \" , newDir);\r\n                    setWorkingArr(lul=>{\r\n                        const newArr :File[]= getRequiredArray(newDir,homeArray,0);\r\n                        console.log(\"changing working arr to :\",newArr)\r\n                        return newArr;\r\n                    });\r\n                    return newDir;\r\n                })\r\n                    \r\n                \r\n\r\n            }else{\r\n                const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\", }}>\r\n                    <span> No Such directory found. Use the command <span>mkdir</span> to create a directory</span>\r\n                    </div>\r\n                results?.push(returnElement)   \r\n            }\r\n            \r\n        }else{\r\n            setWorkingDir(prev=>{\r\n                \r\n                setWorkingArr(homeArray);\r\n                return '/';\r\n            })\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    function showFileContent(file:string){\r\n        //check each file in working arr, if exits, write output to terminal\r\n        var fileFound:boolean = false;\r\n        workingArr.forEach(fileInArr=>{\r\n\r\n            if(fileInArr.getName()===file){\r\n                fileFound = true;\r\n                if(fileInArr.getType()==='file'){\r\n                    \r\n                    const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\" }}>\r\n                    <span> {fileInArr.getData()}</span>\r\n                    </div>\r\n                    results?.push(returnElement);\r\n\r\n                }\r\n\r\n                else{\r\n\r\n                    const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\" }}>\r\n                    <span> {fileInArr.getName()} is a directory. Use the command <span>cd</span> to change directory</span>\r\n                    </div>\r\n                    \r\n                    results?.push(returnElement)   \r\n                \r\n                    return;\r\n\r\n                }\r\n                \r\n            }\r\n        })\r\n\r\n        //file doesn't exits return error\r\n        if(!fileFound){\r\n            const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\" }}>\r\n                    <span> No Such file found. Use the command <span>touch</span> to create a file</span>\r\n                    </div>\r\n            results.push()\r\n            results?.push(returnElement)   \r\n        }\r\n         \r\n    }\r\n\r\n    const parseCommand = (command: string) => {\r\n\r\n        let inputs: string[] = getCommandArgs(command);\r\n        //console.log(\"parsing commands\" , inputs);\r\n        console.log(\"Arguments are\", inputs);\r\n\r\n        const cmd = inputs[0];\r\n        const file = inputs[1];\r\n\r\n\r\n        switch (cmd) {\r\n\r\n            case 'cd': {\r\n                \r\n                changeDirectory(file)\r\n                break;\r\n            }\r\n            case 'ls': {\r\n                terminalOutput(workingArr);\r\n                break;\r\n            }\r\n\r\n            case 'mkdir': {\r\n                break;\r\n            }\r\n\r\n            case 'touch': {\r\n                terminalOutput(getRequiredArray(\"/experience\", homeArray, 0));\r\n                break;\r\n            }\r\n\r\n            case 'clear': {\r\n                setResults([])\r\n                break;\r\n            }\r\n\r\n            case 'cat': {\r\n                showFileContent(file);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h2>Testing terminal</h2>\r\n            \r\n            <div className={classes.terminalContainer}>\r\n            <TerminalBar />\r\n\r\n                {\r\n                    results.map(result => {\r\n                        return result;\r\n                    })\r\n                }\r\n                <span style={{ textAlign: \"left\" }}> guest@web:<span style={{ color: \"#2d84ea\" }}>~{workingDir}</span> $ {/*&gt*/} {\" \"}\r\n                    <input type=\"text\"\r\n                        id=\"cmdInput\"\r\n                        className={classes.commandInput}\r\n                        onChange={handleInputChange}\r\n                        value={cmdInput}\r\n                        onKeyDown={e => handleKeyDown(e)}>\r\n                    </input>\r\n                </span>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Terminal;","import React from 'react';\r\nimport  Terminal from './Terminal';\r\n\r\n\r\n\r\n\r\nconst TerminalComp : React.FC = () => {\r\n    return (\r\n        <Terminal />\r\n    )\r\n}\r\n\r\nexport default TerminalComp;","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Sai\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body1\">My sticky footer can be found here.</Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Container} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nexport default function Header(props:any) {\r\n  const classes = useStyles();\r\n  const { sections, title } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Button size=\"small\">Subscribe</Button>\r\n        <Typography\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n          align=\"center\"\r\n          noWrap\r\n          className={classes.toolbarTitle}\r\n        >\r\n          My Terminal\r\n        </Typography>\r\n        <IconButton>\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <Button variant=\"outlined\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </Toolbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport TerminalComp from './terminal';\r\nimport Footer from './footer/Footer';\r\nimport Header from './header/Header';\r\n\r\n\r\nconst Main: React.FC = () =>{\r\n    return(\r\n        <div className=\"main\">\r\n            <Header />\r\n            <TerminalComp />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main';\nimport TerminalFeature from './components/terminal/additionalFeatures/feature';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main /> \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}