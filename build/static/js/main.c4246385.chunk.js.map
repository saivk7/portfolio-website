{"version":3,"sources":["components/terminal/File.ts","components/terminal/info/exp.ts","components/terminal/info/projects.ts","components/terminal/info/animals.ts","components/terminal/info/certifications.ts","components/terminal/info/index.ts","components/terminal/utils/fileInsert.ts","components/terminal/terminalUtils.ts","components/terminal/TerminalBar.tsx","components/terminal/Commands.ts","components/terminal/Terminal.tsx","components/terminal/index.tsx","components/header/Header.tsx","components/Main.tsx","components/footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["File","name","type","location","data","files","this","newName","experience","file0","file1","file2","file3","push","projects","emptyDirectory","animals","file4","undefined","certifications","homeArray","file01","file02","map","file","getName","getRequiredArray","arr","innerLevel","console","log","i","length","getType","getLocation","getFiles","getArr","getDirectoryName","workingDir","dirName","replaced","replace","useStyles","makeStyles","theme","header","background","height","display","justifyContent","alignItems","width","margin","boxShadow","termButton","borderRadius","marginLeft","exit","minimize","maximize","TerminalBar","classes","className","tabCommands","isValidTabCommand","cmd","c","commands","terminalContainer","backgroundColor","gridAutoFlow","minHeight","maxHeight","color","outline","textShadow","fontSize","fontFamily","fontWeight","overflowY","alignContent","scrollbarColor","commandInput","border","maxWidth","directoryStyle","fileStyle","Terminal","useState","workingArr","setWorkingArr","setWorkingDir","cmdInput","setCmdInput","results","setResults","count","setCount","terminalHandler","document","getElementById","React","useEffect","scrollTop","scrollHeight","clientHeight","getCommandArgs","command","split","filter","e","handleKeyDown","key","preventDefault","input","toPush","style","textAlign","parseCommand","inputs","terminalOutput","mockEnter","nearestMathcArray","workingFile","regex","RegExp","match","sort","getNearestMatch","FileArray","padding","returnElement","columnCount","flexWrap","changeDirectory","dir","isValidDirectory","prev","newDir","lul","newArr","fileFound","forEach","fileInArr","getData","showFileContent","onClick","focus","id","result","onChange","target","value","onKeyDown","TerminalComp","NavigationBar","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","Main","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c4246385.chunk.js","sourcesContent":["export class File{\r\n    private name :string;\r\n    private type : string;\r\n    private location:string;\r\n    private data ?: string;\r\n    private files ?: File[]| null ;\r\n\r\n    constructor(name:string,type:string,location:string, data ?:string, files?:File[] | null ){\r\n        this.name = name;\r\n        this.type = type;\r\n        this.location = location;\r\n        this.data = data;\r\n        if(type==='directory'){\r\n            this.files = files;\r\n        }\r\n    }\r\n\r\n    getName(): string{\r\n        return this.name;\r\n    }\r\n    setName(newName:string) {\r\n        this.name = newName;\r\n    }\r\n\r\n    getType(): string{\r\n        return this.type;\r\n    }\r\n    \r\n    getLocation():string{\r\n        return this.location;\r\n    }\r\n\r\n    getData(): string {\r\n\r\n        return this.data || '';\r\n    }\r\n\r\n    getFiles(): File[] | null {\r\n        if(this.type==='directory'){\r\n            return this.files || null;\r\n        }        \r\n        return null;\r\n    }\r\n\r\n    /* makeNewFolder(name:string): File {\r\n\r\n    }\r\n\r\n    makeNewFile(name:string,data:string) : File{\r\n\r\n    } */\r\n\r\n}\r\n","\r\nimport { File } from '../File';\r\n\r\n\r\nlet experience :File[] = [];\r\nlet file0: File = new File(\"magyk\", \"file\", \"/experience\", \"Software Developer focused on building cloud solutions on AWS\")\r\nlet file1: File = new File(\"vedanta\",\"file\",\"/experience\",\"Software Enigeer working on backend microservices\"); \r\nlet file2: File = new File(\"logicHive\",\"file\",\"/experience\",\"Co-op\"); \r\nlet file3: File = new File(\"NITK\",\"file\",\"/experience\",\"Student Researcher\"); \r\n\r\nexperience.push(file0);\r\nexperience.push(file1);\r\nexperience.push(file2);\r\nexperience.push(file3);\r\n\r\nexport default experience;\r\n","\r\nimport { File } from '../File';\r\n\r\n\r\nlet projects :File[] = [];\r\nlet file0: File = new File(\"nearby\", \"file\",\"/projects\", \"An End-to-End Real Time data pipeline with Full Stack dashboard\")\r\nlet file1: File = new File(\"whatsapp\",\"file\",\"/projects\",\"Full stack whatapp clone with real time texting\"); \r\nlet file2: File = new File(\"newdevjobs\",\"file\",\"/projects\",\"A Full Stack SPA website to find jobs!\"); \r\nlet file3: File = new File(\"FibonaaciHeap\",\"file\",\"/projects\",\"Implementation of Fibonacci heap\"); \r\n\r\nprojects.push(file0);\r\nprojects.push(file1);\r\nprojects.push(file2);\r\nprojects.push(file3);\r\n\r\nexport default projects;\r\n","\r\nimport { File } from '../File';\r\n\r\nlet emptyDirectory: File[] = [new File(\"lol\",\"file\",\"/animals/testDir\",\"empty file\"), new File(\"lol2\",\"file\",\"/animals/testDir\",\"empty file2\")];\r\nlet animals :File[] = [];\r\n\r\nlet file1: File = new File(\"zefee\",\"file\",\"/animals\",\"Husky dog in Gnv\"); \r\nlet file2: File = new File(\"BabyChai\",\"file\",\"/animals\",\"Maine coon cat in UK\"); \r\n\r\nlet file4: File = new File(\"testDir\", \"directory\",\"/animals\",undefined,emptyDirectory)\r\n\r\nanimals.push(file1);\r\nanimals.push(file2);\r\n\r\nanimals.push(file4);\r\n\r\nexport default animals;\r\n","import { File } from '../File';\r\n\r\n\r\nlet certifications :File[] = [];\r\n\r\nlet file1: File = new File(\"AWS\",\"file\",\"/certifications\",\"AWS Certified Cloud Architect : Associate Level\"); \r\nlet file2: File = new File(\"SixSigma\",\"file\",\"/certifications\",\"KPMG Certified Six Sigma : Green Belt\"); \r\n//let file3: File = new File(\"FibonaaciHeap\",\"file\",\"/certifications\",\"Implementation of Fib heap\"); \r\n\r\ncertifications.push(file1);\r\ncertifications.push(file2);\r\n//certifications.push(file3);\r\n\r\nexport default certifications;\r\n","import { File } from '../File';\r\nimport experience from './exp';\r\nimport projects from './projects';\r\nimport animals from './animals';\r\nimport certifications from './certifications';\r\n\r\n\r\nlet homeArray :File[] = [];\r\nlet file01: File = new File(\"contact\",\"file\",\"/\",\"saivenkateshk@usf.edu\"); \r\nlet file02: File = new File(\"skills\",\"file\",\"/\",`[Java, python, JavaScript, TypeScript, AWS, Node.js, React, Redux, SQL]`); \r\nlet file03: File = new File(\"animals\",\"directory\",\"/\",undefined,animals); \r\nlet file04: File = new File(\"certifications\",\"directory\",\"/\",undefined,certifications); \r\nlet file1: File = new File(\"experience\",\"directory\",\"/\",undefined,experience); \r\nlet file2: File = new File(\"projects\",\"directory\",\"/\",undefined,projects); \r\nlet file4: File = new File(\"animals\",\"directory\",\"/\",undefined,animals); \r\nlet file3: File = new File(\"certifications\",\"directory\",\"/\",undefined,certifications); \r\n\r\n\r\nhomeArray[0] = file01;\r\nhomeArray[1] = file02;\r\n\r\nhomeArray[2] = file1;\r\nhomeArray[3] = file2;\r\nhomeArray[4] = file3;\r\nhomeArray[5] = file4;\r\n\r\n\r\nexport const fileArr = homeArray.map( file => {\r\n    return file.getName();\r\n})\r\n\r\nexport default homeArray;","import { File } from '../File';\r\nimport { RecursiveFindDirectory } from './fileUtils';\r\n\r\n// Returns the array that needs modification \r\n// called by insert of delete file functions\r\nexport function getRequiredArray (location:string,arr:File[],innerLevel:number):any {\r\n    if(location === '/'){\r\n        return arr;\r\n    }\r\n    \r\n    if(arr===null){\r\n        console.log(\"\\n\\n ******* RETURNING  NULL  ******* \\n\\n\")\r\n        return null;\r\n    }\r\n\r\n    for(var i=0;i<arr.length;i++){ \r\n\r\n        if(arr[i].getType()==='directory'){\r\n\r\n            \r\n            console.log(\"current:\",(arr[i].getLocation()+ `${ (innerLevel)>=1 ? '/' : \"\" }` + `${arr[i].getName()}`) , \" || required: \" ,location)\r\n            console.log(\"match?:\", (arr[i].getLocation() + `${ (innerLevel)>=1 ? '/' : \"\" }`+ arr[i].getName()) === (location));\r\n            \r\n            /*\r\n            const x = arr[i].getLocation() + `${ (innerLevel)>=1 ? '/' : \"\" }` +arr[i].getName();\r\n\r\n            const y = location;\r\n            console.log(\"x:\",x,\"||  y :\",y, \" compare \" , (x===y));\r\n            */\r\n\r\n            if( (arr[i].getLocation() + `${ (innerLevel)>=1 ? '/' : \"\" }` + `${arr[i].getName()}`) === location){\r\n\r\n                console.log(\"FOUND ARRAY\",arr[i]);\r\n                console.log(\"FOUND ARRAY GET FILES\", arr[i].getFiles() );\r\n                const retFile: File[] = arr[i].getFiles()!;\r\n                return retFile;\r\n\r\n            }\r\n            else{\r\n\r\n                const getArr: File[] =  getRequiredArray(location,arr[i].getFiles()!,innerLevel+1);\r\n                console.log(\"INTERMEDIATE ARRAY :\", getArr);\r\n                if(getArr){\r\n                    return getArr;\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport function deleteFile(fileName:string,location:string,fileArr:File[]): File[] {\r\n    \r\n    var toDelete : File[] = getRequiredArray(location,fileArr,0);\r\n    console.log(\" ***** toDeleted Array: \\n\\n\", toDelete);\r\n    try{\r\n\r\n        for(var i =0 ; i< toDelete.length ; i++){\r\n            if(toDelete[i].getName()===fileName){\r\n                toDelete.splice(i,1);\r\n            }\r\n        }\r\n\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n    console.log(\" ***** deleted Array: \\n\\n\", toDelete);\r\n    return toDelete;\r\n\r\n}\r\n\r\nexport function addFile( file:File,fileArr:File[] ) : File[] {\r\n    /* console.log(\"main array before\", fileArr);*/\r\n    console.log('getLocation', file.getLocation());\r\n    \r\n    var toInsert : File[] = getRequiredArray(file.getLocation(),fileArr,0);\r\n\r\n    try{\r\n\r\n        console.log(\"\\n \\n ***!!! RETURNED ARRAY  : \" ,toInsert);\r\n        toInsert.push(file);\r\n\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n    \r\n    //console.log(\"AFTER PUSH \\n\", toInsert);\r\n    console.log(\"Main array\" , fileArr);\r\n    return fileArr;\r\n}\r\n\r\n\r\nexport function printDir(arr: File[],type:'file'|'directory') {\r\n    const retarr = [];\r\n    for(var i=0; i<arr.length; i++){\r\n        if( arr[i].getType() === type){\r\n            retarr.push(arr[i].getName())\r\n        }\r\n    }\r\n    return retarr;\r\n    \r\n}\r\n\r\n\r\n//console.log(\"ADD FILE\",addFile(animalFile,homeArray));\r\n/* \r\n\r\nif( fileArr[i].getType()==='directory' ){\r\n\r\n            console.log(\"CHECKING THE LOC MATCH:\",fileArr[i].getLocation() +`${fileArr[i].getName()}`, 'and ', file.getLocation() , fileArr[i].getLocation() +`${fileArr[i].getName()}` === file.getLocation());\r\n\r\n            if( fileArr[i].getLocation() +`${fileArr[i].getName()}` === file.getLocation()){\r\n\r\n                if(fileArr[i].getFiles()){\r\n                    console.log(\"PUSHING TO DIR \", fileArr[i].getName());\r\n                    console.log(\" \\n I'M HERE : \" , fileArr[i].getFiles()); \r\n                    fileArr[i].getFiles()!.push(file);\r\n                    console.log(\" \\n \\n  AFTER PUSH\",fileArr[i].getFiles());\r\n                    console.log(\"\\n\\n the  new  return home\",homeArray)\r\n                    return homeArray;\r\n                }\r\n            }else{\r\n                console.log(\" SEARCHING THE DIR \", fileArr[i].getName());\r\n                var newFileArr: File[] = fileArr[i].getFiles()!;\r\n                addFile(file,newFileArr);\r\n            }\r\n\r\n        }\r\n        console.log(\"for loop i= \", i)\r\n    }\r\n    console.log(\"DONE\")\r\n    \r\n    */","import {File} from \"./File\"\r\nimport homeArray from \"./info\";\r\nimport { getRequiredArray  } from \"./utils/fileInsert\";\r\n\r\n\r\nexport function isValidDirectory(workingDir:string,dirName:string):boolean{\r\n    const dir:string = getDirectoryName(workingDir,dirName);\r\n    const arr: File[] = getRequiredArray(dir,homeArray,0);\r\n    console.log(\"checking\", dir, \"from termial utils , isValidDir function: \" ,arr)\r\n    if(arr){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n//returns a proper dict name \r\nexport function getDirectoryName(workingDir:string, dirName:string):string{\r\n    \r\n    let re = /[^a-zA-Z0-9]*/ //replaces until first char [ex. ./home becomes home]\r\n    \r\n    const replaced = dirName.replace(re,\"\");\r\n\r\n    console.log(\"replaced is \" ,replaced , \"working dir \" , workingDir);\r\n    \r\n    if(workingDir==='/'){\r\n        console.log(\"Working dir is /\" , replaced);\r\n        return workingDir + replaced;\r\n        \r\n    }else{\r\n        return workingDir+ '/' + replaced;\r\n    }\r\n    \r\n}\r\n\r\nexport function getChangedDirectoryName(dir:string):string{\r\n\r\n    return \"\"\r\n}\r\n\r\n\r\nexport function getNearestMatch(file:string, workingArr:File[]):File[] | null{\r\n\r\n    const retArr: File[]  = workingArr.filter(workingFile=>{\r\n        var str = \"^\" + file\r\n        var regex = new RegExp(str,\"i\");\r\n\r\n        console.log(\"checking mactch, \", regex, workingFile.getName() ,workingFile.getName().match(regex));\r\n        if(workingFile.getName().match(regex)) return true;\r\n    })\r\n    return retArr.sort();\r\n    \r\n}\r\n\r\n\r\nconsole.log('test')\r\n\r\nconst str = \"./home\";\r\n\r\nconsole.log(getDirectoryName(\"\", str));","import React from 'react';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\nimport { isClassExpression } from 'typescript';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    header: {\r\n        background: \"#e4e3e5\",\r\n        height: \"28px\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        width:\"75%\",\r\n        margin: \"auto\",\r\n        boxShadow:\"5px 15px 10px  gray\"\r\n      },\r\n      termButton: {\r\n        background: \" #f96256\",\r\n        width: \"14px\",\r\n        height: \"14px\",\r\n        borderRadius: \"15px\",\r\n        marginLeft: \"8px\"\r\n      },\r\n      exit: {\r\n        background: \"#f96256\"\r\n      },\r\n      minimize: {\r\n        background: \"#fdbc3d\"\r\n      },\r\n      maximize: {\r\n        background: \"#33c948\"\r\n      },\r\n    \r\n\r\n    \r\n    \r\n}));\r\n\r\nconst TerminalBar = () => {\r\n\r\n    \r\n\r\n    \r\n\r\n    const classes = useStyles({});\r\n\r\n    return (\r\n      \r\n        <div className={classes.header} >\r\n          <div className={classes.termButton + \" \" + classes.exit}></div>\r\n          <div className={classes.termButton + \" \" + classes.minimize}></div>\r\n          <div className={classes.termButton + \" \" + classes.maximize}></div>\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\n\r\nexport default TerminalBar;","const commands : string[] = [\"cd\",\"ls\",\"mkdir\",\"touch\",\"clear\",\"nano\",\"pwd\",\"cat\"];\r\nconst tabCommands: string[] = [\"cd\",\"ls\",\"cat\",\"lol\"]\r\n\r\nexport function isValidTabCommand(cmd:string) : boolean {\r\n    \r\n    console.log(\"commadn valid? \", cmd);\r\n    for(var c=0; c<tabCommands.length; c+=1){\r\n        if(tabCommands[c]===cmd) return true;\r\n        \r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport function isValidCommand(cmd:string) : boolean {\r\n\r\n    for(var c=0; c<commands.length; c+=1){\r\n        if(commands[c]===cmd) return true;\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport default commands;","import { makeStyles } from '@material-ui/core';\r\nimport { File } from './File';\r\nimport React, { useState } from 'react';\r\nimport homeArray, { fileArr } from './info';\r\n\r\nimport { getRequiredArray, addFile, deleteFile } from './utils/fileInsert';\r\nimport { checkServerIdentity } from 'tls';\r\nimport { isValidDirectory, getChangedDirectoryName, getDirectoryName, getNearestMatch } from './terminalUtils';\r\n\r\n\r\nimport TerminalBar from './TerminalBar';\r\nimport commands, { isValidTabCommand } from './Commands';\r\nimport { emitKeypressEvents } from 'readline';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    terminalContainer: {\r\n        backgroundColor: \"#1e1e1e\",\r\n        display: \"grid\",\r\n        gridAutoFlow: \"columns \",\r\n        margin: \"auto\",\r\n        width: \"75%\",\r\n        height:\"auto\",\r\n        minHeight:\"400px\",\r\n        maxHeight:\"400px\",\r\n        color: \"white\",\r\n        outline: \"none\",\r\n        textShadow: \"0 0 0 gray\",\r\n        fontSize: \"18px\",\r\n        fontFamily: \"consolas\",\r\n        fontWeight: 400,\r\n        overflowY:\"scroll\",\r\n        \r\n        boxShadow:\"5px 5px 5px  gray\",\r\n        alignItems:\"flex-start\",\r\n        alignContent:\"flex-start\",\r\n\r\n        scrollbarColor:\"transparent\"\r\n\r\n    },\r\n    commandInput: {\r\n        background: \"#1e1e1e\",\r\n        outline: \"none\",\r\n        border: \"none\",\r\n        color: \"white\",\r\n        maxWidth:\"400px\",\r\n        textShadow: \"0 0 0 gray\",\r\n        fontSize:\"18px\",\r\n        fontFamily: \"consolas\",\r\n        \r\n        fontWeight: 200,\r\n        \r\n        \"&:focus\": {\r\n            outline: \"0px solid transparent;\",\r\n            border: \"none\"\r\n        }\r\n    },\r\n    directoryStyle:{\r\n        color:\"#2d84ea\",\r\n        margin: \"0px\"\r\n    },\r\n    fileStyle:{\r\n        margin: \"0px\",\r\n        color: \"greenyellow\"\r\n    }\r\n\r\n    \r\n    \r\n}));\r\n\r\nconst Terminal: React.FC = () => {\r\n    \r\n    const classes = useStyles({});\r\n    const [workingArr,setWorkingArr] = useState(homeArray);\r\n    const [workingDir, setWorkingDir] = useState('/')\r\n    const [cmdInput, setCmdInput] = useState('help');\r\n    const [results, setResults] = useState<JSX.Element[]>([]);\r\n    const [count,setCount] = useState<number>(0);\r\n    const terminalHandler: HTMLElement = document.getElementById(\"terminalContainer\")! \r\n    React.useEffect(()=>{\r\n        console.log(\"use effect hook\")\r\n        if(terminalHandler) terminalHandler.scrollTop = terminalHandler.scrollHeight - terminalHandler.clientHeight\r\n\r\n    },[cmdInput,results,workingArr,count]); \r\n\r\n    const handleClickFocus = (e:any) =>{\r\n        document.getElementById(\"cmdInput\")?.focus()\r\n\r\n        return false;\r\n        \r\n    }\r\n    const handleInputChange = (e: any) => { // for recording user input in the terminal\r\n        //console.log(fileArr);\r\n        //console.log(e.target.value);\r\n        setCmdInput(e.target.value);\r\n        e.target.style.width = e.target.value.length + 10 + \"ch\";\r\n    };\r\n\r\n    function getCommandArgs(command: string): string[] {\r\n        let arr = command.split(\" \").filter((e) => (e !== ''));\r\n        return arr;\r\n    }\r\n    const mockEnter = () => {\r\n        \r\n        const toPush: JSX.Element =  <div style={{  textAlign: \"left\" }}>\r\n            <span> guest@web:<span style={{ color: \"#2d84ea\" }}>~{workingDir}</span> $ {/*&gt*/} {\" \"} {cmdInput}</span>\r\n        </div>\r\n\r\n        results.push(toPush);\r\n        setResults(results);\r\n        terminalOutput(workingArr);\r\n        setCmdInput(cmdInput=>cmdInput);\r\n        setCount(count=> count+1);\r\n        \r\n    }\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            \r\n            //parseCommand(cmdInput); complete this function \r\n            //parse only if it is not empty command\r\n            console.log(\"Enter Key pressed\")\r\n            var input = cmdInput;\r\n            var inputs = getCommandArgs(input);\r\n            const toPush: JSX.Element =  <div style={{  textAlign: \"left\" }}>\r\n                <span> guest@web:<span style={{ color: \"#2d84ea\" }}>~{workingDir}</span> $ {/*&gt*/} {\" \"} {cmdInput}</span>\r\n            </div>\r\n\r\n            results.push(toPush)\r\n\r\n            if(cmdInput==\"\" || cmdInput==null) {\r\n                setResults(results);\r\n                return;\r\n            };\r\n            parseCommand(input);\r\n            \r\n            setCmdInput(\"\");\r\n            if(terminalHandler) terminalHandler.scrollTop = terminalHandler.scrollHeight - terminalHandler.clientHeight\r\n            \r\n        }\r\n        else if(e.key===\"Tab\"){\r\n            e.preventDefault();\r\n            console.log(\"tab pressed\")\r\n            console.log(\"command input is \", cmdInput)\r\n            let inputs: string[] = getCommandArgs(cmdInput);\r\n            //console.log(isValidTabCommand(inputs[0]) , \" input length\")\r\n            if(inputs.length==1 && isValidTabCommand(inputs[0])){\r\n\r\n                console.log(\"valid and now adding to result\");\r\n                \r\n                mockEnter();\r\n                \r\n                \r\n                setResults(results);\r\n                return;\r\n            }else if(inputs.length>=2 && isValidTabCommand(inputs[0])){\r\n                \r\n                const nearestMathcArray:File[] = getNearestMatch(inputs[1],workingArr)!;\r\n                console.log(\"nearest match\",nearestMathcArray);\r\n                if(nearestMathcArray.length>=2){\r\n                    \r\n                    const toPush: JSX.Element =  <div style={{  textAlign: \"left\" }}>\r\n                                                 <span> guest@web:<span style={{ color: \"#2d84ea\" }}>~{workingDir}</span> $ {/*&gt*/} {\" \"} {cmdInput}</span>\r\n                                                </div>\r\n    \r\n                    results.push(toPush)\r\n                    terminalOutput(nearestMathcArray);\r\n                    setCmdInput(cmdInput=> {\r\n                        setCount(count=> count+1);\r\n                        return inputs[0] + \" \" + inputs[1];\r\n                    });\r\n                    return;\r\n                    \r\n                    \r\n\r\n                }else if(nearestMathcArray.length===1){\r\n                    setCmdInput(inputs[0] + \" \" + nearestMathcArray[0].getName());\r\n                }\r\n\r\n                return nearestMathcArray;\r\n            }\r\n\r\n\r\n\r\n\r\n            \r\n\r\n\r\n        }\r\n    }\r\n    //outputs and add the the files to be displayed on terminal output to Reuslts array \r\n    function terminalOutput(FileArray: File[]): JSX.Element {\r\n\r\n        const arr = FileArray.map((file: File) => {\r\n            return (\r\n                <p style={{ margin: \"5px 10px\", padding: \"0px\" }}>\r\n                    <span className={ file.getType()==='directory'?classes.directoryStyle:classes.fileStyle}>{file.getName()} </span>\r\n                </p>\r\n            )\r\n        })\r\n        const arr1 = [arr];\r\n\r\n        /* console.log(\"The arrays is \" );\r\n        console.log(arr1); */\r\n        const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", alignItems:\"flex-start\", alignContent:\"flex-start\", margin:\"0px\",padding:\"0px\", columnCount: 3, flexWrap: \"wrap\" }}>\r\n            {arr}\r\n        </div>\r\n\r\n        results?.push(returnElement)\r\n        //console.log(\"results: \", results);\r\n        return returnElement;\r\n\r\n    }\r\n\r\n    function changeDirectory(dir:string){\r\n        console.log(\"Change dir name:\" , dir);\r\n        if(dir){\r\n\r\n            if(isValidDirectory(workingDir,dir)){\r\n                setWorkingDir(prev=> {\r\n                    const newDir = getDirectoryName(prev,dir);\r\n                    console.log(\"changing working dir  to \" , newDir);\r\n                    setWorkingArr(lul=>{\r\n                        const newArr :File[]= getRequiredArray(newDir,homeArray,0);\r\n                        console.log(\"changing working arr to :\",newArr)\r\n                        return newArr;\r\n                    });\r\n                    return newDir;\r\n                })\r\n                    \r\n                \r\n\r\n            }else{\r\n                const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\", }}>\r\n                    <span> No Such directory found. Use the command <span>mkdir</span> to create a directory</span>\r\n                    </div>\r\n                results?.push(returnElement)   \r\n            }\r\n            \r\n        }else{\r\n            setWorkingDir(prev=>{\r\n                \r\n                setWorkingArr(homeArray);\r\n                return '/';\r\n            })\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    function showFileContent(file:string){\r\n        //check each file in working arr, if exits, write output to terminal\r\n        var fileFound:boolean = false;\r\n        workingArr.forEach(fileInArr=>{\r\n\r\n            if(fileInArr.getName()===file){\r\n                fileFound = true;\r\n                if(fileInArr.getType()==='file'){\r\n                    \r\n                    const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\" }}>\r\n                    <span> {fileInArr.getData()}</span>\r\n                    </div>\r\n                    results?.push(returnElement);\r\n\r\n                }\r\n\r\n                else{\r\n\r\n                    const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\" }}>\r\n                    <span> {fileInArr.getName()} is a directory. Use the command <span>cd</span> to change directory</span>\r\n                    </div>\r\n                    \r\n                    results?.push(returnElement)   \r\n                \r\n                    return;\r\n\r\n                }\r\n                \r\n            }\r\n        })\r\n\r\n        //file doesn't exits return error\r\n        if(!fileFound){\r\n            const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\" }}>\r\n                    <span> No Such file found. Use the command <span>touch</span> to create a file</span>\r\n                    </div>\r\n            results.push()\r\n            results?.push(returnElement)   \r\n        }\r\n         \r\n    }\r\n\r\n    const parseCommand = (command: string) => {\r\n\r\n        let inputs: string[] = getCommandArgs(command);\r\n        //console.log(\"parsing commands\" , inputs);\r\n        console.log(\"Arguments are\", inputs);\r\n\r\n        const cmd = inputs[0];\r\n        const file = inputs[1];\r\n\r\n\r\n        switch (cmd) {\r\n\r\n            case 'cd': {\r\n                \r\n                changeDirectory(file)\r\n                break;\r\n            }\r\n            case 'ls': {\r\n                terminalOutput(workingArr);\r\n                break;\r\n            }\r\n\r\n            case 'mkdir': {\r\n                break;\r\n            }\r\n\r\n            case 'touch': {\r\n                terminalOutput(getRequiredArray(\"/experience\", homeArray, 0));\r\n                break;\r\n            }\r\n\r\n            case 'clear': {\r\n                setResults([])\r\n                break;\r\n            }\r\n\r\n            case 'cat': {\r\n                showFileContent(file);\r\n                break;\r\n            }\r\n\r\n            case 'help':{\r\n                const returnElement: JSX.Element = <div style={{ display: \"inline-flex\", flexWrap: \"wrap\", marginLeft:\"10px\" }}>\r\n                    <span>Supported commands are ls,cat,cd,clear. To go back use 'cd'</span>\r\n                    </div>\r\n                    results.push()\r\n                    results?.push(returnElement)   \r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container\" onClick={handleClickFocus}>\r\n            \r\n            \r\n            <div >\r\n            <TerminalBar />\r\n                <div className={classes.terminalContainer} id=\"terminalContainer\">\r\n                {\r\n                    results.map(result => {\r\n                        return result;\r\n                    })\r\n                }\r\n                <span style={{ textAlign: \"left\" }}> guest@web:<span style={{ color: \"#2d84ea\" }}>~{workingDir}</span> $ {/*&gt*/} {\" \"}\r\n                    <input type=\"text\"\r\n                        id=\"cmdInput\"\r\n                        className={classes.commandInput}\r\n                        onChange={handleInputChange}\r\n                        value={cmdInput}\r\n                        onKeyDown={e => handleKeyDown(e)}>\r\n                    </input>\r\n                </span>\r\n\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Terminal;","import React from 'react';\r\nimport  Terminal from './Terminal';\r\n\r\n\r\n\r\n\r\nconst TerminalComp : React.FC = () => {\r\n    return (\r\n        <Terminal />\r\n    )\r\n}\r\n\r\nexport default TerminalComp;","import { right } from '@popperjs/core';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';import './header.css';\r\n\r\nconst NavigationBar = () => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n\r\n  return (\r\n    <div >\r\n      <Navbar light expand=\"md\" >\r\n        <NavbarBrand href=\"/\">Terminal</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar style={{justifyContent:\"end\"}}>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {/* <NavItem >\r\n              <NavLink href=\"/\">Components</NavLink>\r\n            </NavItem> */}\r\n            <NavItem>\r\n              <NavLink href=\"https://github.com/saivk7\" target=\"_blank\" >Projects</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Contact\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem href=\"https://linkedin.com/in/saikadiyala\" target=\"_blank\">\r\n                  LinkedIn\r\n                </DropdownItem>\r\n                <DropdownItem href=\"https://github.com/saivk7/portfolio-website\" target=\"_blank\">\r\n                   Github\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem href=\"/\">\r\n                  Reset\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport TerminalComp from './terminal';\r\nimport NavigationBar from './header/Header';\r\n\r\n\r\nconst Main: React.FC = () =>{\r\n    return(\r\n        <div className=\"main\">\r\n            <NavigationBar />\r\n            <TerminalComp />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nconst Footer :React.FC = ()=> {\r\n    return(\r\n      <div className=\"navbar navbar-default navbar-fixed-bottom\">\r\n    <div className=\"container\">\r\n      <p className=\"navbar-text pull-left\">© 2021 -Built By <a href=\"http://github.com/saivk7\" target=\"_blank\" >Sai</a>\r\n           \r\n      </p>\r\n      \r\n    </div>\r\n    \r\n    \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './components/Main';\r\nimport Footer from './components/footer/Footer';\r\n\r\nimport TerminalFeature from './components/terminal/additionalFeatures/feature';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main /> \r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}